# Below you can include specific configuration files depending on what you want KAMP to do:

[include /home/t7/Klipper-Adaptive-Meshing-Purging/Configuration/Adaptive_Meshing.cfg]       # Include to enable adaptive meshing configuration.
[include /home/t7/Klipper-Adaptive-Meshing-Purging/Configuration/Line_Purge.cfg]             # Include to enable adaptive line purging configuration.
#[include /home/t7/Klipper-Adaptive-Meshing-Purging/Configuration/Voron_Purge.cfg]            # Include to enable adaptive Voron logo purging configuration.
[include /home/t7/Klipper-Adaptive-Meshing-Purging/Configuration/Smart_Park.cfg]             # Include to enable the Smart Park function, which parks the printhead near the print area for final heating.

[gcode_macro _KAMP_Settings]
description: This macro contains all adjustable settings for KAMP 

# The following variables are settings for KAMP as a whole.
variable_verbose_enable: True               # Set to True to enable KAMP information output when running. This is useful for debugging.

# The following variables are for adjusting adaptive mesh settings for KAMP.
variable_mesh_margin: 0                     # Expands the mesh size in millimeters if desired. Leave at 0 to disable.
variable_fuzz_amount: 0                     # Slightly randomizes mesh points to spread out wear from nozzle-based probes. Leave at 0 to disable.

# The following variables are for those with a dockable probe like Klicky, Euclid, etc.                 # ----------------  Attach Macro | Detach Macro
variable_probe_dock_enable: False           # Set to True to enable the usage of a dockable probe.      # ---------------------------------------------
variable_attach_macro: 'Attach_Probe'       # The macro that is used to attach the probe.               # Klicky Probe:   'Attach_Probe' | 'Dock_Probe'
variable_detach_macro: 'Dock_Probe'         # The macro that is used to store the probe.                # Euclid Probe:   'Deploy_Probe' | 'Stow_Probe'
                                                                                                        # Legacy Gcode:   'M401'         | 'M402'

# The following variables are for adjusting adaptive purge settings for KAMP.
variable_purge_height: 0.8                  # Z position of nozzle during purge, default is 0.8.
variable_tip_distance: 0                    # Distance between tip of filament and nozzle before purge. Should be similar to PRINT_END final retract amount.
variable_purge_margin: 10                   # Distance the purge will be in front of the print area, default is 10.
variable_purge_amount: 30                   # Amount of filament to be purged prior to printing.
variable_flow_rate: 12                      # Flow rate of purge in mm3/s. Default is 12.

# The following variables are for adjusting the Smart Park feature for KAMP, which will park the printhead near the print area at a specified height.
variable_smart_park_height: 10              # Z position for Smart Park, default is 10.

gcode: # Gcode section left intentionally blank. Do not disturb.

    {action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}



#[gcode_macro _km_options]
#description: Placeholder _km_options macro to satisfy requirements
#gcode:
#    M117 "_km_options placeholder"

#[idle_timeout]
#timeout: 600
#gcode:
#    _KM_IDLE_TIMEOUT

#[save_variables]
#filename: ~/variables.cfg


#[gcode_macro _km_globals]
#variable_bed_surface_max_name_length: 10
#variable_bed_surfaces: []
#variable_beep_frequency: 1000
#variable_beep_duration: 100
#variable_load_length: 90.0
#variable_load_speed: 300
#variable_load_priming_length: 25.0
#variable_load_priming_speed: 150
#variable_menu_show_octoprint: 1
#variable_menu_show_sdcard: 1
#variable_menu_temperature: [
#    {'name' : 'PLA',  'extruder' : 200, 'bed' : 60},
#    {'name' : 'PETG', 'extruder' : 230, 'bed' : 85},
#    {'name' : 'ABS',  'extruder' : 245, 'bed' : 110}]
#variable_park_x: 0.0
#variable_park_y: 0.0
#variable_park_z: 20.0
#variable_pressure_advance_scale: -1.0
#variable_probe_mesh_padding : 5.0
#variable_probe_min_count: 3
#variable_probe_count_scale: 1.0
#variable_start_extruder_preheat_scale: 0.5
#variable_start_bed_heat_delay: 2000
#variable_start_bed_heat_overshoot: 2.0
#variable_start_level_bed_at_temp: 1
#variable_start_clear_adjustments_at_end: 1
#variable_travel_speed_xy: 3000
#variable_travel_speed_z: 600
#variable_velocity_decel_scale: 0.5
#description: Initializes our globals, including any _km_options overrides.
#gcode:
#    # Check for required sections in printer.cfg
#    {% set required_sections = {"heater_bed" : None,
#                                "extruder" : None,
#                                "gcode_macro _km_options" : None,
#                                "idle_timeout" : ("gcode", "_KM_IDLE_TIMEOUT"),
#                                "pause_resume" : None,
#                                "respond" : None,
#                                "save_variables" : None,
#                                "virtual_sdcard" : None
#                               } %}
#    {% set output = [] %}
#    {% for s in required_sections %}
#        {% set f = required_sections[s][0] if required_sections[s] else None %}
#        {% set v = required_sections[s][1] if required_sections[s] else None %}
#        {% if s not in printer.configfile.config %}
#            {% set dummy = output.append("Missing [%s] section.\n" | format(s)) %}
#        {% elif f and
#                (v not in printer.configfile.config[s][f]|default("")|upper) %}
#            {% set dummy = output.append("Missing %s in %s for [%s] section.\n"
#                                         | format(v, f, s)) %}
#        {% endif %}
#    {% endfor %}
#    {% if output %}
#        { action_emergency_stop(
#            "required printer.cfg section(s) missing:\n"
#            ~ output | join("\n")) ~
#            "See readme: https://github.com/jschuh/" }
#    {% endif %}


